{"version":3,"sources":["AppMode.js","components/Dropdown.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/CreateEditAccountDialog.js","components/ConfirmDeleteAccount.js","components/ResetPasswordPage.js","components/LookUpAccountDialog.js","components/SecurityQuestionDialog.js","components/LoginPage.js","components/FeedPostReply.js","components/FeedPostItem.js","components/FeedPage.js","components/ConfirmDeleteRound.js","components/RoundsTable.js","components/RoundForm.js","components/FloatingButton.js","components/Rounds.js","components/CoursesPage.js","components/AboutBox.js","components/RegisterPage.js","components/GradesPage.js","components/Assignment.js","components/AssignmentsPage.js","components/AnalyticsPage.js","components/CourseSettingsPage.js","components/UsersPage.js","components/HelpPage.js","components/MailPage.js","components/ProfilePage.js","components/DeleteCoursePage.js","components/Course.js","components/FindCoursePage.js","components/UserSettingsPage.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","HELP","MAIL","PROFILE","RESET","ASSIGNMENTS","GRADES","USER_SETTINGS","COURSE_SETTINGS","CREATE_COURSE","DELETE_COURSE","FIND_COURSE","ANALYTICS","USERS","REGISTER","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","Object","freeze","Dropdown","props","logOut","changeMode","className","role","style","width","this","displayMenu","type","href","onClick","React","Component","NavBar","toggleShowDropdown","newType","setState","prevState","setType","switchMode","newMode","renderStudentMode","mode","dashboard","assignments","grades","renderInstructorMode","users","settings","analytics","renderRightItems","state","src","height","renderDropdown","alt","SideMenu","renderModeMenuItems","menuOpen","toggleMenuOpen","profilePicURL","id","displayName","localAccount","editAccount","showAbout","CreateEditAccountDialog","checkDataValidity","password","passwordRepeat","repeatPassRef","current","setCustomValidity","handleChange","event","formUpdated","origAccountInfo","formIsUpdated","target","name","value","length","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","updateField","updateVal","securityQuestion","securityAnswer","setDefaultDisplayName","handleSubmit","a","preventDefault","userData","url","accountName","create","fetch","headers","method","body","JSON","stringify","res","status","done","text","resText","deleteAccount","confirmDelete","confirmDeleteAccount","e","newUserRef","createRef","userId","json","parse","ResetPasswordPage","resetPasswordRef","resetPasswordRepeatRef","resetPassword","focus","errorMsg","checkForSubmit","code","position","right","cancelResetPassword","onSubmit","placeholder","pattern","ref","onKeyUp","LookUpAccountDialog","handleLookUpAccount","emailRef","response","obj","authStrategy","getSecurityAnswer","ErrMsg","errMsg","size","SecurityQuestionDialog","securityAnswerRef","answer","getNewPassword","readOnly","question","rows","cols","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","accountCreateDone","msg","statusMsg","showCreateAccountDialog","cancelCreateAccount","resetUserId","resetQ","resetA","showLookUpAccountDialog","showSecurityQuestionDialog","showResetPasswordPage","handleOAuthLogin","provider","window","open","handleOAuthLoginClick","setTimeout","pw","showResetPaswordDialog","deleted","closeStatusMsg","reset","signUp","emailInputRef","passwordInputRef","githubIcon","githubLabel","loginMsg","newAccountCreated","htmlFor","padding","fontSize","fontWeight","backgroundColor","required","cancel","FeedpostReply","key","boxShadow","borderRadius","margin","marginLeft","createdby","content","FeedpostItem","showReply","prevstate","addreply","newpost","_inputElement","Date","now","replies","concat","seeReplies","createntries","entry","JSXreplies","map","marginBottom","listStyleType","display","flexDirection","FeedPage","addpost","isanonymous","posts","toggledropdown","showdropdown","changeselected","newfilter","curselected","setanonymous","userid","JSXposts","float","marginTop","ConfirmDeleteRound","close","deleteRound","RoundsTable","editRound","setEditId","showConfirmDelete","setDeleteId","renderTable","table","r","push","rounds","date","substring","course","Number","strokes","minutes","seconds","keys","colSpan","fontStyle","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","faIcon","btnLabel","roundData","saveRound","min","sec","today","getTimezoneOffset","toISOString","substr","holes","notes","thisRound","startData","onChange","maxLength","max","disabled","FloatingButton","handleClick","Rounds","addRound","newData","userObj","refreshOnUpdate","editId","_id","deleteId","val","closeErrorMsg","icon","CoursesPage","AboutBox","textAlign","RegisterPage","createAccount","handleRegister","email","confirm_email","confirm_password","first_name","confirm_first_name","last_name","confirm_last_name","confirm_id","handleOnChange","school","confirm_emailRef","passwordRef","confirm_passwordRef","fnameRef","confirm_fnameRef","lnameRef","confirm_lnameRef","IDRef","confirmIDRef","validated","color","autocomplete","GradesPage","Assignment","borderBottom","assignment","duedate","didsubmit","latestactivity","AssignmentsPage","JSXassignments","paddingLeft","AnalyticsPage","CourseSettingsPage","UsersPage","HelpPage","MailPage","ProfilePage","DeleteCoursePage","Course","coursename","coursenumber","semester","instructor","FindCoursePage","courses","JSXcourses","UserSettingsPage","modeTitle","modeToPage","Register","ResetPassword","Grades","Users","Analytics","Assignments","CourseSettings","Help","Mail","Profile","DeleteCourse","FindCourse","UserSettings","App","handleChangeMode","openMenu","closeMenu","setUserId","Id","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","editAccountDone","showAboutDialog","then","isAuthenticated","user","ModePage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9145d0f.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    HELP: \"HelpMode\", \r\n    MAIL: \"MailMode\", \r\n    PROFILE: \"ProfileMode\",\r\n    RESET: \"ResetMode\",\r\n    ASSIGNMENTS: \"AssignmentsMode\",\r\n    GRADES: \"GradesMode\",\r\n    USER_SETTINGS: \"UserSettingsMode\",\r\n    COURSE_SETTINGS : \"CourseSettingsMode\",\r\n    CREATE_COURSE: \"CreateCourseMode\", \r\n    DELETE_COURSE: \"DeleteCourseMode\", \r\n    FIND_COURSE: \"FindCourseMode\",\r\n    ANALYTICS: \"AnalyticsMode\",\r\n    USERS: \"UsersMode\",\r\n    REGISTER : \"RegisterMode\",\r\n    FEED: \"FeedMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport '../styles/Dropdown.css';\r\n\r\nclass Dropdown extends React.Component {\r\nconstructor(props){\r\n super(props);\r\n\r\n};\r\n\r\n\r\nlogOut = () =>{\r\n  this.props.changeMode(AppMode.LOGIN);\r\n}\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div  className=\"modal-dropdown\" role=\"dialog\" style = {{width:\"200px\"}} >\r\n\r\n          { this.props.displayMenu ?  this.props.type == \"profile\" ? (\r\n        <ul className = \"maindropdown\">\r\n         <li className = \"dropitem\"><a className=\"active\" href=\"#View Profile\" onClick={() =>this.props.changeMode(AppMode.MAIL)}>Mail(0)</a></li>\r\n         <li className = \"dropitem\"><a href=\"#Settings\" onClick={() =>this.props.changeMode(AppMode.PROFILE)}>View Profile</a></li>\r\n         <li className = \"dropitem\"><a href=\"#Settings\" onClick={() =>this.props.changeMode(AppMode.USER_SETTINGS)}>Settings</a></li>\r\n         <li className = \"dropitem\" onClick={this.logOut}><a href=\"#Log Out\">Log Out </a></li>\r\n          </ul>\r\n        ):\r\n        (\r\n          <ul className = \"maindropdown\">\r\n           <li className = \"dropitem\"><a className=\"active\" href=\"#Create Page\" onClick={() =>this.props.changeMode(AppMode.FIND_COURSE)}>Find Course</a></li>\r\n           <li className = \"dropitem\"><a href=\"#Create Course\" onClick={() =>this.props.changeMode(AppMode.COURSE_SETTINGS)}>Create Course</a></li>\r\n           <li className = \"dropitem\"><a href=\"#Delete Course\" onClick={() =>this.props.changeMode(AppMode.DELETE_COURSE)}>Delete Course </a></li>\r\n            </ul>\r\n          )\r\n        :\r\n        (\r\n          null\r\n        )\r\n        }\r\n\r\n       </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport Dropdown from './Dropdown'\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      displayMenu: false,\r\n      type: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  toggleShowDropdown = (newType) => {\r\n    this.setState(prevState => ({displayMenu: !prevState.displayMenu}));\r\n    this.setType(newType);\r\n  }\r\n\r\n  switchMode = (newMode) =>{\r\n    this.props.changeMode(newMode);\r\n  }\r\n\r\n  setType = (newType) =>{\r\n    this.setState({type: newType});\r\n  }\r\n\r\n  renderStudentMode = () =>{\r\n    return(\r\n      <div>\r\n       <span>&nbsp;&nbsp;&nbsp;</span>\r\n      <span className={ this.props.mode == AppMode.FEED ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.FEED)}>\r\n        &nbsp;{this.props.dashboard}&nbsp;\r\n      </span>\r\n      <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      <span className={ this.props.mode == AppMode.ASSIGNMENTS ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.ASSIGNMENTS)}>\r\n        &nbsp;{this.props.assignments}&nbsp;\r\n      </span>\r\n      <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      <span className={ this.props.mode == AppMode.GRADES ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.GRADES)}>\r\n        &nbsp;{this.props.grades}&nbsp;\r\n      </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  renderInstructorMode = () =>{\r\n    return(\r\n      <div>\r\n      <span>&nbsp;&nbsp;&nbsp;</span>\r\n      <span className={ this.props.mode == AppMode.FEED ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.FEED)}>\r\n        &nbsp;&nbsp;{this.props.dashboard}&nbsp;\r\n      </span>\r\n      <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      <span className={ this.props.mode == AppMode.ASSIGNMENTS ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.ASSIGNMENTS)}>\r\n        &nbsp;{this.props.assignments}&nbsp;\r\n      </span>\r\n      <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      <span className={ this.props.mode == AppMode.GRADES ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.GRADES)}>\r\n        &nbsp;{this.props.grades}&nbsp;\r\n      </span>\r\n\r\n      <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      <span className={ this.props.mode == AppMode.USERS ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.USERS)}>\r\n        &nbsp;{this.props.users}&nbsp;\r\n      </span>\r\n\r\n      <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      <span className={ this.props.mode == AppMode.COURSE_SETTINGS ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.COURSE_SETTINGS)}>\r\n        &nbsp;{this.props.settings}&nbsp;\r\n      </span>\r\n\r\n      <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      <span className={ this.props.mode == AppMode.ANALYTICS ? \"navbar-title item-selected\": \"navbar-title\"} onClick={() =>this.switchMode(AppMode.ANALYTICS)}>\r\n        &nbsp;{this.props.analytics}&nbsp;\r\n      </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRightItems = () =>{\r\n\r\n    return (\r\n      <div>\r\n        \r\n        {/* <span className=\"navbar-title\">&nbsp; <Dropdown/>&nbsp;</span> */}\r\n        <span className=\"navbar-title\" onClick= {() =>this.toggleShowDropdown(\"course\")}>&nbsp;CptS 489\r\n        <Dropdown \r\n          displayMenu={this.state.displayMenu}\r\n          type={this.state.type}\r\n          changeMode={this.props.changeMode}/>&nbsp;</span>\r\n        <span className=\"navbar-title fa fa-angle-down\">&nbsp;</span>\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n        <img src=\"osble2.png\" height='60' width='60' className=\"navbar-items\"/>\r\n        <span className=\"navbar-title\" onClick= {() =>this.toggleShowDropdown(\"profile\")}>Hermes Obiang \r\n        <Dropdown \r\n          displayMenu={this.state.displayMenu}\r\n          type={this.state.type}\r\n          changeMode={this.props.changeMode}/>&nbsp;</span>\r\n        <span className=\"navbar-title fa fa-angle-down\">&nbsp;&nbsp;</span>\r\n\r\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n        <span className=\"navbar-title fa fa-envelope\" onClick={() =>this.switchMode(AppMode.MAIL)}>&nbsp;Mail(0)&nbsp;</span>\r\n\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className=\"navbar-title fa fa-question-circle\" onClick={() =>this.switchMode(AppMode.HELP)}>&nbsp;Help&nbsp;&nbsp;</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDropdown = () =>{\r\n    return(<Dropdown/>);\r\n  }\r\n\r\n    \r\n  render() {\r\n    return (\r\n    <div className=\"navbar\">  \r\n    <span className=\"navbar-items\">\r\n      <img src=\"osble3.png\" alt=\"osble Logo\" height=\"50px\" onClick={() =>this.switchMode(AppMode.FEED)} width=\"100px\" className=\"navbar-items\"/>\r\n      {/* {this.renderStudentMode()} */}\r\n      {this.renderInstructorMode()}\r\n    </span>\r\n    <span className=\"navbar-items-right\">\r\n      {this.renderRightItems()}\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\r\n        <a className=\"sidemenu-item \">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.profilePicURL} height='60' width='60' />\r\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\r\n        </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          {this.props.localAccount ? \r\n            <a id=\"accountBtn\" className=\"sidemenu-item\" onClick={this.props.editAccount}>\r\n              <span className=\"fa fa-user\"></span>&nbsp;Account</a> : null}\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={this.props.showAbout}>\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ||  this.props.mode === AppMode.REGISTER? \r\n          \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n        <a className={(this.props.mode === AppMode.FEED  || this.props.mode === AppMode.REGISTER? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Feed</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.ROUNDS || \r\n               this.props.mode === AppMode.ROUNDS_EDITROUND || \r\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                  \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Rounds</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\nimport ConfirmDeleteAccount from './ConfirmDeleteAccount.js';\r\nimport confirmDeleteAccount from './ConfirmDeleteAccount.js';\r\n\r\nclass CreateEditAccountDialog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.origAccountInfo = null;\r\n        //Create a ref for the email input DOM element\r\n        this.newUserRef = React.createRef();\r\n        this.repeatPassRef = React.createRef();\r\n        this.profilePicRef = React.createRef();\r\n        this.state = {accountName: \"\",\r\n                      displayName: \"\",\r\n                      profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                      password: \"\",\r\n                      passwordRepeat: \"\",\r\n                      securityQuestion: \"\",\r\n                      securityAnswer: \"\",\r\n                      formUpdated: false,\r\n                      confirmDelete: false};\r\n    } \r\n\r\n    //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\r\n    //the database and push them into the state.\r\n    async componentDidMount() {\r\n        if (!this.props.create) {\r\n            //obtain current user data from database and push into state\r\n            const url = \"/users/\" + this.props.userId;\r\n            const res = await fetch(url);\r\n            const json = await res.json();\r\n            const userData = JSON.parse(json);\r\n            this.origAccountInfo = userData; //This determines whether update can occur\r\n            this.origAccountInfo.passwordRepeat = userData.password;\r\n            this.setState({accountName: this.props.userId,\r\n                           displayName: userData.displayName,\r\n                           profilePicURL: userData.profilePicURL,\r\n                           password: userData.password,\r\n                           passwordRepeat: userData.password,\r\n                           securityQuestion: userData.securityQuestion,\r\n                           securityAnswer: userData.securityAnswer});\r\n        }\r\n    }\r\n\r\n    //checkDataValidity -- Callback function invoked after a form element in\r\n    //the 'Create Account' dialog box changes and component state has been\r\n    //updated. We first check whether the passwords match. If they do not, \r\n    //we set a custom validity message to be displayed when the user clicks the\r\n    //'Create Account' button. Otherwise, we reset the custom validity message\r\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n    //Second, we check whether anything in the form changed from the original.\r\n    //If so, we update the 'formUpdated' state var, so that the form's submit\r\n    //button is enabled.\r\n    checkDataValidity = () => {\r\n        if (this.state.password != this.state.passwordRepeat) {\r\n            //Passwords don't match\r\n            this.repeatPassRef.current.setCustomValidity(\r\n            \"This password must match password entered in previous field.\");\r\n        } else {\r\n            this.repeatPassRef.current.setCustomValidity(\"\");\r\n        }\r\n    }\r\n\r\n    //handleChange--Called when a field in a dialog box form changes.\r\n    handleChange = (event) => {\r\n        const formUpdated = (this.origAccountInfo == null ? true : this.formIsUpdated(event.target.name,event.target.value));\r\n        if (event.target.name === \"profilePic\") {\r\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\r\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                               formUpdated: formUpdated},\r\n                               this.checkDataValidity);\r\n            } else { //The user selected a file\r\n                const self = this;\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\r\n                reader.addEventListener(\"load\",function() {\r\n                    self.setState({profilePicURL:  this.result,\r\n                                   formUpdated: formUpdated},this.checkDataValidity);\r\n                });\r\n                \r\n            }\r\n        } else {\r\n            this.setState({[event.target.name]: event.target.value,\r\n                           formUpdated: formUpdated},this.checkDataValidity);\r\n        }\r\n    } \r\n\r\n    //formisUpdated-- Checks whether any form data element has changed from the original. If so, \r\n    //returns true. Returns false otherwise. Note that in case of editing new account, always returns\r\n    //true since this.origAccountInfo is set to null.\r\n    //Should be called whenever the user makes a change to form data.\r\n    formIsUpdated = (updateField,updateVal) => {\r\n        if (this.origAccountInfo[updateField] != updateVal) {return true;}\r\n        if (updateField != \"displayName\" && \r\n             this.state.displayName != this.origAccountInfo.displayName) \r\n             {return true;}\r\n        if (updateField != \"profilePicURL\" && \r\n             this.state.profilePicURL != this.origAccountInfo.profilePicURL) \r\n             {return true;}\r\n        if (updateField != \"password\" &&\r\n            this.state.password !== this.origAccountInfo.password)\r\n            {return true;}\r\n        if (updateField != \"passwordRepeat\" &&\r\n            this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat)\r\n            {return true;}\r\n        if (updateField != \"securityQuestion\" &&\r\n            this.state.securityQuestion !== this.origAccountInfo.securityQuestion)\r\n            {return true;}\r\n        if (updateField != \"securityAnswer\" &&\r\n            this.state.securityAnswer !== this.origAccountInfo.securityAnswer)\r\n            {return true;}\r\n        return false;\r\n    }\r\n\r\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\r\n    //Sets default value of display name to value entered into Email field \r\n    //as a courtesy.\r\n    setDefaultDisplayName = (event) => {\r\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\r\n        this.setState({displayName: event.target.value});\r\n      }\r\n    }\r\n\r\n    //handleSubmit -- Triggered when user clicks on submit button to\r\n    //either create or edit account.\r\n    //Custom data checking ensures user account under this email does not \r\n    //already exist and that the rest of the info is valid. We create a new  \r\n    // object for user, save it to localStorage and take user to app's \r\n    //landing page. \r\n    handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        //Initialize user account\r\n        let userData = {\r\n            displayName: this.state.displayName,\r\n            password: this.state.password,\r\n            profilePicURL: this.state.profilePicURL,\r\n            securityQuestion: this.state.securityQuestion,\r\n            securityAnswer: this.state.securityAnswer\r\n        };\r\n        const url = '/users/' + this.state.accountName;\r\n        let res;\r\n        if (this.props.create) { //use POST route to create new user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'POST',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"New account created! Enter credentials to log in.\",false);\r\n            } else { //Unsuccessful account creation\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        } else { //use PUT route to update existing user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'PUT',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"User Account Updated!\",false);\r\n            } else { //Unsuccessful account update\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //deleteAccount -- Called after confirms account deletion. \r\n    //Uses DELETE server route to perform server deletion. \r\n    //Calls on done with status message and\r\n    //true if delete was succesful, false otherwise.\r\n    deleteAccount = async() => {\r\n       const url = '/users/' + this.state.accountName;\r\n       const res = await fetch(url, \r\n                    {method: 'DELETE'}); \r\n        if (res.status == 200) { //successful account deletion!\r\n            this.props.done(\"Account '\" + this.state.accountName + \"' has been deleted.\",true);\r\n        } else { //Unsuccessful account deletion\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.props.done(resText,false);\r\n        }\r\n        this.setState({confirmDelete: false});\r\n    }\r\n\r\n    //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\r\n    //button to indicate intention to delete account. Presents the Confirm\r\n    //Delete dialog box.\r\n    confirmDeleteAccount = (e) => {\r\n        e.preventDefault();\r\n        this.setState({confirmDelete: true});\r\n    }\r\n\r\n//     render() {\r\n//     return (  \r\n//     <div className=\"modal\" role=\"dialog\">\r\n//     <div className=\"modal-dialog modal-lg\"></div>\r\n//         <div className=\"modal-content form-center\">\r\n//             <div className=\"modal-header\">\r\n//               <h3><b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b></h3>\r\n//               <button className=\"modal-close\" \r\n//                        onClick={this.props.cancel}>\r\n//                 &times;</button>\r\n//             </div>\r\n//             <div className=\"modal-body\">\r\n//             <form onSubmit={this.handleSubmit}>\r\n//             <label>\r\n//                 Email: \r\n//                 <input  \r\n//                 autocomplete=\"off\"\r\n//                 disabled={!this.props.create}\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"accountName\"\r\n//                 type=\"email\"\r\n//                 size=\"35\"\r\n//                 placeholder=\"Enter Email Address\"\r\n//                 pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n//                 required={true}\r\n//                 ref={this.newUserRef}\r\n//                 value={this.state.accountName}\r\n//                 onChange={this.handleChange}\r\n//                 onBlur={this.setDefaultDisplayName}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Password:\r\n//                 <input\r\n//                 autocomplete=\"off\"\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"password\"\r\n//                 type=\"password\"\r\n//                 size=\"35\"\r\n//                 placeholder=\"Enter Password\"\r\n//                 pattern=\r\n//                 \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n//                 required={true}\r\n//                 value={this.state.password}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Repeat Password:\r\n//                 <input\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"passwordRepeat\"\r\n//                 type=\"password\"\r\n//                 size=\"35\"\r\n//                 placeholder=\"Repeat Password\"\r\n//                 required={true}\r\n//                 ref={this.repeatPassRef}\r\n//                 value={this.state.passwordRepeat}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Display Name:\r\n//                 <input\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"displayName\"\r\n//                 type=\"text\"\r\n//                 size=\"30\"\r\n//                 placeholder=\"Display Name\"\r\n//                 required={true}\r\n//                 value={this.state.displayName}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Profile Picture:<br/>\r\n//                 <input\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"profilePic\"\r\n//                 type=\"file\"\r\n//                 accept=\"image/x-png,image/gif,image/jpeg\" \r\n//                 ref={this.profilePicRef}\r\n//                 value={this.state.profilePic}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//                 <img src={this.state.profilePicURL != \"\" ? \r\n//                             this.state.profilePicURL :\r\n//                             this.state.profilePicDataURL} \r\n//                         height=\"60\" width=\"60\" \r\n//                  />\r\n//             </label> \r\n//             <br/>\r\n//             <label>\r\n//                 Security Question:\r\n//                 <textarea\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"securityQuestion\"\r\n//                 size=\"35\"\r\n//                 placeholder=\"Security Question\"\r\n//                 rows=\"2\"\r\n//                 cols=\"35\"\r\n//                 maxLength=\"100\"\r\n//                 required={true}\r\n//                 value={this.state.securityQuestion}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Answer to Security Question:\r\n//                 <textarea\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"securityAnswer\"\r\n//                 type=\"text\"\r\n//                 placeholder=\"Answer\"\r\n//                 rows=\"2\"\r\n//                 cols=\"35\"\r\n//                 maxLength=\"100\"\r\n//                 required={true}\r\n//                 value={this.state.securityAnswer}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             {!this.props.create ?  \r\n//             <button className=\"btn btn-small btn-danger\" onClick={this.confirmDeleteAccount}>\r\n//                 Delete Account...\r\n//             </button> : null}\r\n//             <br/><br/>\r\n//             <button role=\"submit\" \r\n//                 disabled={!this.state.formUpdated}\r\n//                 className=\"btn btn-primary btn-color-theme modal-submit-btn\">\r\n//                 <span className={this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"}></span>\r\n//                 &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\r\n//             </button>\r\n//             </form>\r\n//             </div>\r\n//         </div>\r\n//         {this.state.confirmDelete ? \r\n//           <ConfirmDeleteAccount email={this.state.accountName}\r\n//                                 deleteAccount={this.deleteAccount}\r\n//                                 close={() => (this.setState({confirmDelete: false}))}\r\n//          /> : null}\r\n//     </div>\r\n//     );\r\n// }\r\n\r\n\r\n}\r\n\r\nexport default CreateEditAccountDialog;","import React from 'react';\r\n\r\nclass ConfirmDeleteAccount extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {emailMatches: false};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.emailRef.current.focus();\r\n    }\r\n\r\n    handleChange = () => {\r\n        const match = (this.emailRef.current.value === this.props.email);\r\n        if (match != this.state.emailMatches) {\r\n            this.setState({emailMatches: match});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Account Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete your account? <br />\r\n                 <i>This action cannot be undone.</i></p>\r\n              <label>\r\n                Confirm Email ({this.props.email}):\r\n                <br/>\r\n                <input \r\n                    className=\"form-center\"\r\n                    type=\"text\"\r\n                    ref={this.emailRef}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <br />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteAccount} disabled={!this.state.emailMatches}>\r\n                  Yes, Delete My Account</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteAccount;","import React from 'react'\r\nimport AppMode from \"../AppMode.js\"\r\n\r\nclass ResetPasswordPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.resetPasswordRef = React.createRef();\r\n        this.resetPasswordRepeatRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleSubmit -- When the user submits the form, ensure that the passwords match.\r\n    //If so, call on resetPassword in parent component to actually reset the password.\r\n    //Otherwise, display an error message prompting the user to try again.\r\n    handleSubmit= (event) => {\r\n        event.preventDefault();\r\n        if (this.resetPasswordRef.current.value === this.resetPasswordRepeatRef.current.value) {\r\n            this.props.resetPassword(this.resetPasswordRef.current.value);\r\n        } else {\r\n            this.resetPasswordRepeatRef.current.focus();\r\n            this.setState({errorMsg: \"The passwords you entered do not match. Please try again.\"});\r\n        }\r\n    }\r\n\r\n    checkForSubmit = (e) => {\r\n        if (e.code === \"Enter\") {\r\n            e.preventDefault();\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"osblepage\">\r\n                <center>\r\n                    <img src=\"https://i.imgur.com/lBOwYfO.png\" style={{position:\"relative\",right:\".7rem\"}}></img>\r\n                </center>\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h3 className=\"modal-title\"><b>Reset Password</b>\r\n                            </h3>\r\n                            <button className=\"modal-close\" \r\n                                onClick={this.props.cancelResetPassword}>\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                            <form onSubmit={this.handleSubmit}>\r\n                            <label>\r\n                                New Password: \r\n                                <input\r\n                                type=\"password\"\r\n                                placeholder=\"Enter new password\"\r\n                                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                                className=\"form-control form-text\"\r\n                                ref={this.resetPasswordRef}\r\n                                />\r\n                            </label>\r\n                            <br></br>\r\n                            <label>\r\n                                Repeat New Password: \r\n                                <input\r\n                                type=\"password\"\r\n                                id=\"repeatPassword\"\r\n                                placeholder=\"Repeat new password\"\r\n                                className=\"form-control form-text\"\r\n                                onKeyUp={this.checkForSubmit}\r\n                                ref={this.resetPasswordRepeatRef}\r\n                                />\r\n                            </label>\r\n                            <br></br>\r\n                            <button role=\"submit\" \r\n                            className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                                <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                            </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n          );\r\n        \r\n    }\r\n}\r\n\r\nexport default ResetPasswordPage;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass LookUpAccountDialog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n    //button, we check whether the account exists. If it does, we update the state,\r\n    //setting the resetEmail var to the email entered, hiding the current dialog box\r\n    //and showing the security question dialog box.\r\n    handleLookUpAccount = async(event) => {\r\n        event.preventDefault();\r\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\r\n        if (response.status == 200) {\r\n            const json = await response.json();\r\n            const obj = JSON.parse(json);\r\n            if (obj.authStrategy === \"local\") {\r\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\r\n            } else { //Account exists but was created through OAuth so password can't be reset \r\n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\r\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\r\n            }\r\n        } else {\r\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={() => {this.props.cancelResetPassword()}}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\r\n                    <form onSubmit={this.handleLookUpAccount}>\r\n                    <label>\r\n                        Account Email Address: \r\n                        <input\r\n                        ref={this.emailRef}\r\n                        className=\"form-control form-text\"\r\n                        type=\"email\"\r\n                        size=\"35\"\r\n                        placeholder=\"Enter Email Address\"\r\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                        ref={this.emailRef}\r\n                        required={true}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" \r\n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n        );   \r\n    }\r\n\r\n}\r\n\r\nexport default LookUpAccountDialog;\r\n","import React from 'react';\r\n\r\nclass SecurityQuestionDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.securityAnswerRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //Focus cursor in email secrity answer field when mounted\r\n    componentDidMount() {\r\n        this.securityAnswerRef.current.focus();\r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.securityAnswerRef.current.value === this.props.answer) {\r\n            this.props.getNewPassword();\r\n        } else {\r\n            this.securityAnswerRef.current.focus();\r\n            this.setState({errorMsg: \"Sorry, that is not the correct answer to the security question. Try again.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Answer Security Question</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Security Question: \r\n                        <textarea\r\n                        readOnly={true}\r\n                        value={this.props.question}\r\n                        className=\"form-control form-text\"\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Security Answer: \r\n                        <textarea\r\n                        className=\"form-control form-text\"\r\n                        placeholder=\"Enter Security Question Answer\"\r\n                        ref={this.securityAnswerRef}\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                      className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );        \r\n    }\r\n}\r\n export default SecurityQuestionDialog;","import React from 'react';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js';\r\nimport ResetPasswordPage from './ResetPasswordPage.js';\r\nimport LookUpAccountDialog from './LookUpAccountDialog.js';\r\nimport SecurityQuestionDialog from './SecurityQuestionDialog.js';\r\nimport './LoginPage.css';\r\nimport AppMode from '../AppMode.js';\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        //Create a ref for the email input DOM element\r\n        this.emailInputRef = React.createRef();\r\n        this.resetUserId = \"\";\r\n        this.resetQ = \"\";\r\n        this.resetA = \"\";\r\n        this.passwordInputRef = React.createRef();\r\n        this.state = {\r\n            statusMsg: \"\",\r\n            loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\",\r\n            showLookUpAccountDialog: false,\r\n            showSecurityQuestionDialog: false,\r\n            showResetPasswordPage: false,\r\n            githubIcon: \"fa fa-github\",\r\n            githubLabel: \"Sign in with GitHub\",\r\n            loginMsg: \"\",\r\n            newAccountCreated: false\r\n        };\r\n    }\r\n\r\n    //Focus cursor in email input field when mounted\r\n    componentDidMount() {\r\n        this.emailInputRef.current.focus();\r\n    }\r\n\r\n    //handleLoginSubmit -- Called when user clicks on login button.\r\n    handleLoginSubmit = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n            loginBtnLabel: \"\"\r\n        });\r\n\r\n        this.props.changeMode(AppMode.FEED);\r\n        // const url = \"auth/login?username=\" + this.emailInputRef.current.value +\r\n        //     \"&password=\" + this.passwordInputRef.current.value;\r\n        // const res = await fetch(url, { method: 'POST' });\r\n        // if (res.status == 200) { //successful login!\r\n        //     window.open(\"/\", \"_self\");\r\n        // } else { //Unsuccessful login\r\n        //     const resText = await res.text();\r\n        //     this.setState({\r\n        //         loginBtnIcon: \"fa fa-sign-in\",\r\n        //         loginBtnLabel: \"Log In\",\r\n        //         statusMsg: resText\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    //accountCreateDone -- Called by child CreateAccountDialog component when \r\n    //user attempted to create new account. Hide the dialog and display \r\n    //a message indicating result of the attempt.\r\n    accountCreateDone = (msg) => {\r\n        this.setState({\r\n            statusMsg: msg,\r\n            showCreateAccountDialog: false\r\n        });\r\n    }\r\n\r\n    //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n    //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n    cancelCreateAccount = () => {\r\n        this.setState({ showCreateAccountDialog: false });\r\n    }\r\n\r\n    //cancelResetPassword -- Called by one of the child three child dialog box components when\r\n    //the user decides to cancel resetting their password. Toggles state so that all three\r\n    //of the dialog boxes are hidden\r\n    cancelResetPassword = () => {\r\n        this.resetUserId = \"\";\r\n        this.resetQ = \"\";\r\n        this.resetA = \"\";\r\n        this.setState({\r\n            showLookUpAccountDialog: false,\r\n            showSecurityQuestionDialog: false,\r\n            showResetPasswordPage: false\r\n        });\r\n    }\r\n\r\n    //handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n    //provider\r\n    handleOAuthLogin = (provider) => {\r\n        window.open(`/auth/${provider}`, \"_self\");\r\n    }\r\n\r\n    //handleOAuthLoginClick -- Called whent the user clicks on button to\r\n    //authenticate via a third-party OAuth service. The name of the provider is\r\n    //passed in as a parameter.\r\n    handleOAuthLoginClick = (provider) => {\r\n        this.setState({\r\n            [provider + \"Icon\"]: \"fa fa-spin fa-spinner\",\r\n            [provider + \"Label\"]: \"Connecting...\"\r\n        });\r\n        setTimeout(() => this.handleOAuthLogin(provider), 1000);\r\n    }\r\n\r\n    //getSecurityAnswer: Given the id, security question, and security answer obtained\r\n    //from the LookUpAccountDialog component, update state such that the user will\r\n    //next be prompted to enter security question and answer for verification\r\n    getSecurityAnswer = (userId, question, answer) => {\r\n        this.resetUserId = userId;\r\n        this.resetQ = question;\r\n        this.resetA = answer;\r\n        this.setState({\r\n            showLookUpAccountDialog: false,\r\n            showSecurityQuestionDialog: true\r\n        });\r\n    }\r\n\r\n    //getNewPassword-- Called after user successfully provides correct answer\r\n    //to security question. Presents the \"Reset Password\" dialog box.\r\n    getNewPassword = () => {\r\n        this.setState({\r\n            showSecurityQuestionDialog: false,\r\n            showResetPasswordPage: true\r\n        });\r\n    }\r\n\r\n    //resetPassword--Called after the user successfully enters a new (acceptable)\r\n    //password. pw contains the new password. Call on the Update (PUT) server\r\n    //route to update the user's password in the database.\r\n    resetPassword = async (pw) => {\r\n        const url = \"/users/\" + this.resetUserId;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n\r\n            method: 'PUT',\r\n            body: JSON.stringify({ password: pw })\r\n        });\r\n        if (res.status == 200) { //successful update creation!\r\n            this.setState({\r\n                showResetPaswordDialog: false,\r\n                statusMsg: \"Password successfully reset!\"\r\n            });\r\n        } else { //Unsuccessful account creation\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.setState({\r\n                showResetPasswordPage: false,\r\n                statusMsg: resText\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    //newAccountCreated -- Called after successful creation of a new account\r\n    accountCreateDone = (msg, deleted) => {\r\n        this.setState({\r\n            statusMsg: msg,\r\n            showCreateAccountDialog: false\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //closeStatusMsg -- Called when user clicks on \"x\" to dismiss status message\r\n    closeStatusMsg = () => {\r\n        this.setState({ statusMsg: \"\" });\r\n    }\r\n\r\n    reset = () => {\r\n        this.props.changeMode(AppMode.RESET)\r\n    }\r\n\r\n\r\n    //cancelCreateAccount -- called to hide Create Account dialog without creating acct\r\n    cancelCreateAccount = () => {\r\n        this.setState({ showCreateAccountDialog: false });\r\n    }\r\n\r\n    signUp = () => {\r\n        this.props.changeMode(AppMode.REGISTER);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"osblepage\">\r\n                <center>\r\n                    <div className=\"wrapper\">\r\n                        \r\n                            <img src=\"https://i.imgur.com/lBOwYfO.png\" style={{ position: \"relative\", right: \".7rem\" }}></img>\r\n                            {this.state.statusMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.statusMsg}</span>\r\n                                <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                                    <span className=\"fa fa-times\"></span>\r\n                                </button></div> : null}\r\n                            {this.state.showLookUpAccountDialog ?\r\n                                <LookUpAccountDialog cancelResetPassword={this.cancelResetPassword}\r\n                                    getSecurityAnswer={this.getSecurityAnswer} /> : null}\r\n                            {this.state.showSecurityQuestionDialog ?\r\n                                <SecurityQuestionDialog cancelResetPassword={this.cancelResetPassword}\r\n                                    question={this.resetQ}\r\n                                    answer={this.resetA}\r\n                                    getNewPassword={this.getNewPassword} /> : null}\r\n                            {this.state.showResetPaswordDialog ?\r\n                                <ResetPasswordPage cancelResetPassword={this.cancelResetPassword}\r\n                                    resetPassword={this.resetPassword} /> : null}\r\n                            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n                                <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24, fontWeight: \"500\" }}>\r\n\r\n                                    <input\r\n                                        style={{ backgroundColor: \"white\" }}\r\n                                        ref={this.emailInputRef}\r\n                                        className=\"form-control enterEmail\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        id=\"emailInput\"\r\n                                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                                        required={true}\r\n                                    />\r\n                                </label>\r\n\r\n                                <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24, fontWeight: \"500\" }}>\r\n\r\n                                    <input\r\n                                        ref={this.passwordInputRef}\r\n                                        className=\"form-control enterPassword\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        id=\"passwordInput\"\r\n                                        pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                                        required={true}\r\n                                    />\r\n                                </label>\r\n\r\n                                <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\" btn btn-primary btn-block LoginButton\">\r\n                                    <span id=\"login-btn-icon\" className={this.state.loginBtnIcon} />\r\n                &nbsp;{this.state.loginBtnLabel}\r\n                                </button>\r\n                                <br></br>\r\n                                <p>\r\n                                    <button type=\"button\" className=\"btn btn-link login-link\" id=\"createAccountBtn\"\r\n                                        onClick={this.signUp}>\r\n                                        Create an account</button> |\r\n                <button type=\"button\" className=\"btn btn-link login-link\" id=\"resetBtn\"\r\n                                        onClick={this.reset}>\r\n                                        Reset your password</button>\r\n                                </p>\r\n                                <p>\r\n                                    <i>Version developed by CptS 489 students</i>\r\n                                </p>\r\n                            </form>\r\n                            {this.state.showCreateAccountDialog ?\r\n                                <CreateEditAccountDialog\r\n                                    create={true}\r\n                                    done={this.accountCreateDone}\r\n                                    cancel={this.cancelCreateAccount} /> : null}\r\n                            {this.state.showResetPasswordPage ? <ResetPasswordPage /> : null}\r\n                            </div>\r\n                </center>\r\n            </div>\r\n           \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport '../styles/FeedItem.css';\r\nexport default class FeedpostReply extends React.Component {\r\n \r\n    render() {\r\n        return (\r\n            <li key={this.props.key}>\r\n                <div style={{ width: \"98%\", boxShadow: \"0px 1px 5px rgba(0,0,0,0.55)\",borderRadius:\"5px\", margin: \".5rem\" }}>\r\n                    <div style={{ backgroundColor: \"#f5f5f5\",borderRadius:\"5px\" }}><div style={{ padding: \"3px\" }}><div style = {{marginLeft:\".4rem\"}}>{this.props.createdby}</div></div></div>\r\n                    <div style={{ padding: \"3px\", marginLeft: \".4rem\" }}>{this.props.content}</div>\r\n                        \r\n                </div>\r\n\r\n            </li>\r\n\r\n        )\r\n    }\r\n};","import React from \"react\";\r\nimport '../styles/FeedItem.css';\r\nimport FeedPostReply from './FeedPostReply.js'\r\nexport default class FeedpostItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showReply: false,\r\n            replies: [{ createdby: \"Leonard\", content: \"Example Reply\", key: Date.now() }],\r\n            seeReplies: false\r\n        };\r\n\r\n\r\n    }\r\n\r\n    showReply = (e) => {\r\n        this.setState(prevstate => ({ showReply: !prevstate.showReply }));\r\n    }\r\n    addreply = (e) => {\r\n        var newpost = {\r\n            createdby: \"Leonard\",\r\n            content: this._inputElement.value,\r\n            key: Date.now()\r\n        }\r\n\r\n        this.setState(prevstate => ({ replies: [newpost].concat(prevstate.replies) }));\r\n        this._inputElement.value = \"\";\r\n        this.setState({\r\n            seeReplies: true\r\n        })\r\n        this.showReply();\r\n        e.preventDefault();\r\n    }\r\n    createntries = (entry) => {\r\n        return <FeedPostReply content={entry.content} createdby={entry.createdby} key={entry.key}></FeedPostReply>\r\n    }\r\n    seeReplies = (e) => {\r\n        this.setState(prevstate => ({ seeReplies: !prevstate.seeReplies }));\r\n    }\r\n    render() {\r\n        var JSONreplies = this.state.replies;\r\n        var JSXreplies = JSONreplies.map(this.createntries)\r\n        return (\r\n            <li key={this.props.key}>\r\n          \r\n                <div style={{ width: \"98%\", boxShadow: \"0px 1px 5px rgba(0,0,0,0.55)\", margin: \".5rem\",borderRadius:\"5px\" }}>\r\n                    <div style={{ borderRadius:\"5px\", backgroundColor: \"#f5f5f5\" }}>\r\n                    <div style={{ padding: \"3px\" }}><div style = {{marginLeft:\".4rem\"}}>{this.props.createdby}</div></div></div>\r\n                    <div style={{ padding: \"3px\", marginLeft: \".4rem\" }}>{this.props.content}</div>\r\n\r\n                    <form onSubmit={this.addreply}>\r\n                        {\r\n                            this.state.showReply ?\r\n                                <div >\r\n                                    <textarea required={true} ref={(a) => this._inputElement = a} className=\"postinput\" placeholder=\"Enter Reply Here...\" style={{ marginBottom: \"0px\" }}></textarea>\r\n\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        {\r\n                            this.state.seeReplies ?\r\n                                <ul style={{ listStyleType: \"none\", padding: \"0px\" }}>\r\n                                    {JSXreplies}\r\n                                </ul>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                            <button type=\"button\" className=\"postitembutton\" onClick={this.showReply}>{this.state.showReply ? \"Cancel\" : \"Reply\"}</button>\r\n                            <button type=\"button\" className=\"postitembutton\" onClick={this.seeReplies} style={{ width: \"8rem\" }}>{this.state.seeReplies ? \"Hide Replies\" : \"Show Replies \"}{this.state.seeReplies ? \"\" : \"(\"+this.state.replies.length+\")\"}</button>\r\n                            {\r\n                                this.state.showReply ?\r\n                                    <button className=\"postitembutton\" style={{ width: \"4rem\" }}>Submit</button>\r\n                                    :\r\n                                    null\r\n                            }\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n\r\n            </li>\r\n\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport '../styles/FeedPage.css';\r\nimport FeedPostItem from './FeedPostItem.js'\r\nclass FeedPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { // each json object should follow at least this format\r\n            posts: [{ userid:111111111,createdby: \"Leonard\", content: \"Example Post\", key: Date.now() }],\r\n            showdropdown: false,\r\n            curselected: \"Everyone\",\r\n            isanonymous: false,\r\n        };\r\n\r\n\r\n    }\r\n    addpost = (e) => {\r\n        var newpost = {\r\n            createdby: \"Leonard\",\r\n            content: this._inputElement.value,\r\n            key: Date.now()\r\n        }\r\n        if (this.state.isanonymous == true) {\r\n            newpost.createdby = \"Anonymous\"\r\n        }\r\n        this.setState(prevstate => ({ posts: [newpost].concat(prevstate.posts) }));\r\n        this._inputElement.value = \"\";\r\n        e.preventDefault();\r\n    }\r\n    toggledropdown = (e) => {\r\n        this.setState(prevstate => ({ showdropdown: !prevstate.showdropdown }));\r\n\r\n    }\r\n    changeselected = (newfilter) => {\r\n        this.setState({\r\n            curselected: newfilter\r\n        })\r\n        this.toggledropdown();\r\n    }\r\n    setanonymous = (e) => {\r\n        this.setState(prevstate => ({ isanonymous: !prevstate.isanonymous }));\r\n    }\r\n    createntries = (entry) => {\r\n        return <FeedPostItem content={entry.content} createdby={entry.createdby} key={entry.key}></FeedPostItem>\r\n    }\r\n    render() {\r\n        var JSONposts = this.state.posts;\r\n        var JSXposts = JSONposts.map(this.createntries)\r\n        return (\r\n            <div className=\"feedpage\">\r\n                <div className=\"flexwrapper\">\r\n                    <div className=\"notifications\">\r\n                        <h1 style={{ margin: \".7rem\" ,fontSize:\"30px\"}}>Notifications</h1>\r\n                        <ul>\r\n                            <li>Notification 1</li>\r\n                            <li>Notification 2</li>\r\n                            <li>Notification 3</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"feed\">\r\n                        <h1 style={{ margin: \".7rem\" ,fontSize:\"30px\"}}>Activity Feed</h1>\r\n\r\n                        <form onSubmit={this.addpost}>\r\n                            <textarea required={true} ref={(a) => this._inputElement = a} className=\"postinput\" placeholder=\"Enter new post here...\"></textarea>\r\n                            <div style={{ display: \"flex\", flexDirection: \"row\", height: \"2.5rem\" }}>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" style={{ float: \"left\", marginLeft: \".5rem\" }}>Post</button>\r\n                                <button type=\"button\" onClick={() => this.toggledropdown()} className=\"btn btn-primary\" style={{ float: \"left\", marginLeft: \".5rem\", width: \"10rem\" }}>{this.state.curselected}</button>\r\n                                <input type=\"checkbox\" style={{ marginTop: \".8rem\", marginLeft: \"1rem\" }} onClick={this.setanonymous}></input>\r\n                                <p style={{ marginTop: \".4rem\", marginLeft: \".5rem\" }}>Post Anonymously</p>\r\n                            </div>\r\n                        </form>\r\n                        {this.state.showdropdown ?\r\n                            <div style={{ display: \"flex\", flexDirection: \"column\" }} className=\"mydropdown\">\r\n                                <button className=\"btn btn-primary\" style={{ width: \"10rem\", borderRadius: \"0px\" }} onClick={() => this.changeselected(\"Everyone\")}>Everyone</button>\r\n                                <button className=\"btn btn-primary\" style={{ width: \"10rem\", borderRadius: \"0px\" }} onClick={() => this.changeselected(\"Instructors only\")}>Instructors Only</button>\r\n                            </div>\r\n\r\n                            :\r\n                            null\r\n\r\n                        }\r\n                        \r\n                        <ul style={{ listStyleType: \"none\", padding: \"0px\" ,marginTop:\"1rem\"}}>\r\n                            {JSXposts}\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <div className=\"files\">\r\n                        <h1 style={{ margin: \".7rem\" ,fontSize:\"30px\"}}>Files</h1>\r\n                        <ul>\r\n                            <li>File 1</li>\r\n                            <li>File 2</li>\r\n                            <li>File 3</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\n\r\nclass ConfirmDeleteRound extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Round Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete this round?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteRound}>\r\n                  Yes, Delete</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteRound;","import React from 'react';\r\nimport ConfirmDeleteRound from './ConfirmDeleteRound.js';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {showConfirmDelete: false};\r\n  }\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //deleteRound -- Triggered when the user clicks on the \"Yes, Delete\"\r\n  //button in the Confirm Delete dialog box. It executes the deletion and\r\n  //closes the dialog box.\r\n  deleteRound = () => {\r\n    this.props.deleteRound();\r\n    this.setState({showConfirmDelete: false});\r\n  }\r\n\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n    this.setState({showConfirmDelete: true});\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.rounds.length; ++r) {\r\n    table.push(\r\n      <tr key={r}>\r\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\r\n        <td>{this.props.rounds[r].course}</td>\r\n        <td>{(Number(this.props.rounds[r].strokes) + \r\n              Number(this.props.rounds[r].minutes)) +\r\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \" (\" + \r\n              this.props.rounds[r].strokes + \r\n              \" in \" + this.props.rounds[r].minutes + \":\" + \r\n              (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \")\"}\r\n        </td>\r\n        <td><button onClick={this.props.menuOpen ? null : () => \r\n          this.editRound(r)}>\r\n              <span className=\"fa fa-eye\"></span></button></td>\r\n        <td><button onClick={this.props.menuOpen ? null : \r\n          () => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n      {this.state.showConfirmDelete ?\r\n        <ConfirmDeleteRound \r\n          close={() => this.setState({showConfirmDelete: false})} \r\n          deleteRound={this.deleteRound} /> : null}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  //Create date object for today, taking time zone into consideration\r\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n  //store date as ISO string\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n    //If logging a new round, the starting state is a default round with\r\n    //today's date.\r\n    this.state = {date:  today.toISOString().substr(0,10), \r\n                  course: \"\",\r\n                  type: \"practice\",\r\n                  holes: \"18\",\r\n                  strokes: 80,\r\n                  minutes: 50,\r\n                  seconds: \"00\",\r\n                  notes: \"\",\r\n                  faIcon: \"fa fa-save\",\r\n                  btnLabel: \"Save Round Data\"}\r\n  } else {\r\n    //if editing an existing round, the starting state is the round's\r\n    //current data\r\n    let thisRound = {...this.props.startData};\r\n    delete thisRound.id;\r\n    thisRound.faIcon = \"fa fa-edit\";\r\n    thisRound.btnLabel = \"Update Round Data\";\r\n    this.state = thisRound;\r\n  }\r\n}\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (strokes, min, sec) => {\r\n      return (Number(strokes) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Course:\r\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.course} onChange={this.handleChange}\r\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"practice\">Practice</option>\r\n            <option value=\"tournament\">Tournament</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor() {\r\n        super();\r\n        this.deleteId = \"\";\r\n        this.editId = \"\";\r\n        this.state = {errorMsg: \"\"};           \r\n    }\r\n\r\n    //addRound -- Given an object newData containing a new round, use the \r\n    //server POST route to add the new round to the database. If the add is\r\n    //successful, call on the refreshOnUpdate() method to force the parent\r\n    //App component to refresh its state from the database and re-render itself,\r\n    //allowing the change to be propagated to the Rounds table. Then switch\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.setState({errorMsg: \"\"});\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round in the database. \r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.editId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\r\n    deleteRound = async () => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.deleteId]._id;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: \"An error occurred when attempting to delete round from database: \" \r\n            + msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }  \r\n    }\r\n \r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.deleteId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.editId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    closeErrorMsg = () => {\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    {this.state.errorMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.errorMsg}</span>\r\n                       <button className=\"modal-close\" onClick={this.closeErrorMsg}>\r\n                          <span className=\"fa fa-times\"></span>\r\n                        </button></div>: null}\r\n                    <RoundsTable \r\n                        rounds={this.props.userObj.rounds}\r\n                        setEditId={this.setEditId}\r\n                        setDeleteId={this.setDeleteId}\r\n                        deleteRound={this.deleteRound}\r\n                        changeMode={this.props.changeMode}\r\n                        menuOpen={this.props.menuOpen} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                let thisRound = {...this.props.userObj.rounds[this.editId]};\r\n                thisRound.date = thisRound.date.substr(0,10);\r\n                if (thisRound.seconds < 10) {\r\n                    thisRound.seconds = \"0\" + thisRound.seconds;\r\n                } \r\n                delete thisRound.SGS;\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={thisRound} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\n\r\nclass CoursesPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Courses</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default CoursesPage;","import React from 'react';\r\n\r\nclass AboutBox extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>About SpeedScore</h3>\r\n                <button className=\"modal-close\" onClick={this.props.close}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <img\r\n                src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n                height=\"200\" width=\"200\"/>\r\n                <h3>The World's First and Only Suite of Apps for\r\n                Speedgolf</h3>\r\n                <p>Version CptS 489 Fa20 Complete (MERN)<br/>\r\n                &copy; 2017-20 The Professor of Speedgolf. All rights\r\n                reserved.\r\n                </p>\r\n                <div style={{textAlign: \"left\"}}>\r\n                <p>SpeedScore apps support</p>\r\n                <ul>\r\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                <li>tracking personal speedgolf rounds and sharing results\r\n                (<i>SpeedScore Track&reg;</i>)</li>\r\n                <li>finding speedgolf-friendly courses, booking tee times, and\r\n                paying to play speedgolf by the minute (<i>SpeedScore\r\n                Play&reg;</i>)</li>\r\n                </ul>\r\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                associate professor of computer science at Washington State\r\n                University and the <i>Professor of Speedgolf</i>, with support\r\n                from Scott Dawley, CEO of Speedgolf USA, LLC.</p>\r\n                <p>For more information on SpeedScore, visit <a\r\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                site</a>. For more information on speedgolf, visit <a\r\n                href=\"http://playspeedgolf.com\"\r\n                target=\"_blank\">playspeedgolf.com</a> and <a\r\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                USA</a>.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.close}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AboutBox;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\"\r\n\r\nclass RegisterPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.emailRef = React.createRef();\r\n        this.confirm_emailRef = React.createRef();\r\n        this.passwordRef = React.createRef();\r\n        this.confirm_passwordRef = React.createRef();\r\n        this.fnameRef = React.createRef();\r\n        this.confirm_fnameRef = React.createRef();\r\n        this.lnameRef = React.createRef();\r\n        this.confirm_lnameRef = React.createRef(); \r\n        this.IDRef = React.createRef();\r\n        this.confirmIDRef = React.createRef(); \r\n\r\n        this.state = {\r\n            email: \"\",\r\n            confirm_email: \"\",\r\n            password: \"\",\r\n            confirm_password: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            confirm_last_name: \"\",\r\n            confirm_first_name:\"\",\r\n            school: \"\",\r\n            id: 0,\r\n            confirm_id: 0,\r\n            validated: true,\r\n        };\r\n    }\r\n\r\n    createAccount = () =>{\r\n        this.props.changeMode(AppMode.LOGIN);\r\n    }\r\n\r\n    \r\n\r\n    handleRegister = (event) =>{\r\n        event.preventDefault();\r\n         if(this.state.email == this.state.confirm_email &&\r\n            this.state.password == this.state.confirm_password &&\r\n            this.state.first_name == this.state.confirm_first_name &&\r\n            this.state.last_name == this.state.confirm_last_name &&\r\n            this.state.id == this.state.confirm_id){\r\n            this.createAccount();\r\n        }\r\n        \r\n    }\r\n\r\n    handleOnChange = (event) =>{\r\n        if(event.target.name == \"email\"){\r\n            this.setState({email: event.target.value});\r\n        }\r\n\r\n        else if(event.target.name == \"confirm_email\"){\r\n            this.setState({confirm_email: event.target.value});\r\n        }\r\n        else if(event.target.name == \"password\"){\r\n            this.setState({password: event.target.value});\r\n        }\r\n        else if(event.target.name == \"confirm_password\"){\r\n            this.setState({confirm_password: event.target.value});\r\n        }\r\n        else if(event.target.name == \"first_name\"){\r\n            this.setState({first_name: event.target.value});\r\n        }\r\n        else if(event.target.name == \"last_name\"){\r\n            this.setState({last_name: event.target.value});\r\n        }\r\n        else if(event.target.name == \"confirm_last_name\"){\r\n            this.setState({confirm_last_name: event.target.value});\r\n        }\r\n        else if(event.target.name == \"confirm_first_name\"){\r\n            this.setState({confirm_first_name: event.target.value});\r\n        }\r\n        else if(event.target.name == \"school\"){\r\n            this.setState({school: event.target.value});\r\n        }\r\n        else if(event.target.name == \"id\"){\r\n            this.setState({id: event.target.value});\r\n        }\r\n        else if(event.target.name == \"confirm_id\"){\r\n            this.setState({confirm_id: event.target.value});\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"osblepage\">\r\n            <center>\r\n            <img src=\"https://i.imgur.com/lBOwYfO.png\" style={{position:\"relative\",right:\".7rem\"}}></img>\r\n            <p className = \"paragraph\" style={{color: 'white', fontWeight: 'bold'}}>\r\n            Create a New Account &nbsp; <span className=\"fa fa-question-circle\"></span></p> \r\n            <p className= \"paragraph\" style={{color: 'white', fontWeight: 'bold'}}>Login Information</p>\r\n            \r\n            <div className=\"modal-body\">\r\n            <form onSubmit={this.handleRegister}>\r\n            <label className=\"form-label\">\r\n                 Email address  \r\n                 <input style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"email\"\r\n                 type=\"email\"\r\n                 size=\"35\"\r\n                 pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                 required={true}\r\n                 ref={this.emailRef}\r\n                onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label className=\"form-label\">\r\n                 Confirm email address  \r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"confirm_email\"\r\n                 type=\"email\"\r\n                 size=\"35\"\r\n                 pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                 required={true}\r\n                 ref={this.confirm_emailRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label className=\"form-label\">\r\n                 Password\r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"password\"\r\n                 type=\"password\"\r\n                 id=\"passwordReg\"\r\n                 size=\"35\"\r\n                 pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                 required={true}\r\n                 ref={this.passwordRef}\r\n                 onChange={this.handleOnChange} />\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Confirm password\r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"confirm_password\"\r\n                 type=\"password\"\r\n                 size=\"35\"\r\n                 pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                 required={true}\r\n                 ref={this.confirm_passwordRef}\r\n                 onChange={this.handleOnChange} />\r\n            </label>\r\n            <p className = \"paragraph\" style={{color: 'white', fontWeight: 'bold'}}>Identification</p>\r\n            <label  className=\"form-label\">\r\n                 First name \r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"first_name\"\r\n                 type=\"text\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.fnameRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Last name \r\n                 <input style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"last_name\"\r\n                 type=\"text\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.lnameRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Confirm last name \r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"confirm_last_name\"\r\n                 id=\"confirm_last_name\"\r\n                 type=\"text\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.confirm_lnameRef}\r\n                 onChange={this.handleOnChange} />\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Confirm first name \r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"confirm_first_name\"\r\n                 type=\"text\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.confirm_fnameRef}\r\n                 onChange={this.handleOnChange} />\r\n            </label>\r\n            <p className = \"paragraph form-label\">School Information</p>\r\n            <p style={{color: 'white'}}>Don't see your school in the list? Request that it be added</p>\r\n            <label  className=\"form-label\">\r\n            <select name=\"school\" style={{width:\"600px\"}}\r\n            className=\"form-control form-center\" onChange={this.handleOnChange}>\r\n            <option value=\"Washington State University\">Washington State University</option>\r\n            <option value=\"University of Washington\">University of Washington</option>\r\n            <option value=\"Western Washington University\">Western Washington University</option>\r\n            <option value=\"Seattle University\">Seattle University</option>\r\n          </select>\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Student, Faculty, or Staff ID Number \r\n                 <input style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text\"\r\n                 name=\"id\"\r\n                 type=\"number\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.IDRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Confirm Student, Faculty, or Staff ID Number \r\n                 <input style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center formSize\"\r\n                 name=\"confirm_id\"\r\n                 type=\"number\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.confirmIDRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br></br>\r\n            <button className=\"register-btn\" role=\"submit\" type=\"submit\">Register</button>\r\n            </form>\r\n            </div>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\n\r\nclass GradesPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Grades</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default GradesPage;","import React from \"react\";\r\n\r\nexport default class Assignment extends React.Component {\r\n    //style={{position:\"absolute\",left:\"10rem\"}}\r\n    render() {\r\n        return (\r\n            <tr key={this.props.key} style={{ borderBottom: \"1px solid #dee2e6\" }}>\r\n                \r\n                <td >{<div style={{ marginTop: \"1rem\",marginLeft:\".8rem\" }}>{this.props.assignment}</div>}</td>\r\n                <td >{<div style={{ marginTop: \"1rem\" }}>{this.props.duedate}</div>}</td>\r\n                <td >{<div style={{ marginTop: \".35rem\" }}>{this.props.didsubmit ? <button style={{width:\"5rem\",marginLeft:\"0px\"}} className=\"postitembutton\" >Resubmit</button>:<button style={{width:\"5rem\",marginLeft:\"0px\"}} className=\"postitembutton\" >Submit</button>}</div>}</td>\r\n                <td>{<div style={{ marginTop: \"1rem\" }}>{this.props.latestactivity}</div>}</td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n};","import React from \"react\";\r\nimport '../styles/FeedItem.css';\r\nimport Assignment from './Assignment.js'\r\nexport default class AssignmentsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            assignments: [ // the json object should lbe formatted like this\r\n                { assignment: \"Assignment 1\", duedate: \"11/18/2020 11:59 PM\", didsubmit: false, latestactivity: \"\" },\r\n                { assignment: \"Assignment 2\", duedate: \"11/23/2020 11:59 PM\", didsubmit: true, latestactivity: \"Submitted 11/18/2020 10:43 PM\" }\r\n\r\n            ]\r\n        };\r\n\r\n\r\n    }\r\n    createntries = (entry) => {\r\n        return <Assignment assignment={entry.assignment} duedate={entry.duedate} didsubmit={entry.didsubmit} latestactivity={entry.latestactivity}></Assignment>\r\n    }\r\n    render() {\r\n        var JSONassignments = this.state.assignments;\r\n        var JSXassignments = JSONassignments.map(this.createntries)\r\n        return (\r\n            <div className = \"feedpage\">\r\n                <h1 style={{ margin: \"1.5rem\", fontSize: \"30px\" }}>Assignments</h1>\r\n                <table className=\"table table-hover\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th style={{ width: \"25rem\", paddingLeft: \"1.5rem\" }}>Assignment</th>\r\n                            <th>Due Date</th>\r\n                            <th>Actions</th>\r\n                            <th>Latest Activity</th>\r\n                        </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        {JSXassignments}\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n};","import React from 'react';\r\n\r\nclass AnalyticsPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Analytics</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default AnalyticsPage;","import React from 'react';\r\n\r\nclass CourseSettingsPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Course Settings</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default CourseSettingsPage;","import React from 'react';\r\n\r\nclass UsersPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Users</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default UsersPage;","import React from 'react';\r\nclass HelpPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Help</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default HelpPage;","import React from 'react';\r\nclass MailPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Mail</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default MailPage;","import React from 'react';\r\nclass ProfilePage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Profile</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nclass DeleteCoursePage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Delete Course</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default DeleteCoursePage;","import React from \"react\";\r\n\r\nexport default class Course extends React.Component {\r\n    //style={{position:\"absolute\",left:\"10rem\"}}\r\n    render() {\r\n        return (\r\n            <tr key={this.props.key} style={{ borderBottom: \"1px solid #dee2e6\" }}>\r\n                <td><button className=\"postitembutton\" >+</button></td>\r\n                <td >{<div style={{ marginTop: \".7rem\" }}>{this.props.coursename}</div>}</td>\r\n                <td >{<div style={{ marginTop: \".7rem\" }}>{this.props.coursenumber}</div>}</td>\r\n                <td >{<div style={{ marginTop: \".7rem\" }}>{this.props.semester}</div>}</td>\r\n                <td>{<div style={{ marginTop: \".7rem\" }}>{this.props.instructor}</div>}</td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport Course from './Course.js'\r\nclass FindCoursePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            courses: [ // the json object should lbe formatted like this\r\n                { coursename: \"Introduction to Parallel Computing\", coursenumber: \"CPTS 411\", semester: \"Fall 2020\", instructor: \"Ananth Kalyanaraman\" },\r\n                { coursename: \"Web Development\", coursenumber: \"CPTS 489\", semester: \"Fall 2020\", instructor: \"Chris Handhousen\" },\r\n                { coursename: \"Introduction to Data Mining\", coursenumber: \"CPTS 315\", semester: \"Fall 2020\", instructor: \"Ananth Jillepalli\" },\r\n            ]\r\n        };\r\n\r\n\r\n    }\r\n    createntries = (entry) => {\r\n        return <Course coursename={entry.coursename} coursenumber={entry.coursenumber} semester={entry.semester} instructor={entry.instructor}></Course>\r\n    }\r\n    render() {\r\n        var JSONcourses = this.state.courses;\r\n        var JSXcourses = JSONcourses.map(this.createntries)\r\n        return (\r\n            <div className=\"feedpage\">\r\n                <h1 style={{ margin: \"1.5rem\", fontSize: \"30px\" }}>Search For Courses</h1>\r\n                <table className=\"table table-hover\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th style={{width:\"7rem\",paddingLeft:\"1.5rem\"}}>Join</th>\r\n                            <th>Course Name</th>\r\n                            <th>Course Number</th>\r\n                            <th>Semester</th>\r\n                            <th>Instructor</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {JSXcourses}\r\n                        \r\n                    </tbody>\r\n                    \r\n                </table>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindCoursePage;","import React from 'react';\r\nclass UserSettingsPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >User Setings</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default UserSettingsPage;","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js'\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\"\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport CoursesPage from './CoursesPage.js';\r\nimport AboutBox from './AboutBox.js';\r\nimport Register from './RegisterPage'\r\nimport ResetPassword from './ResetPasswordPage'\r\nimport Grades from './GradesPage'\r\nimport Assignments from './AssignmentsPage'\r\nimport Analytics from './AnalyticsPage'\r\nimport CourseSettings from './CourseSettingsPage'\r\nimport Users from './UsersPage'\r\nimport Help from './HelpPage'\r\nimport Mail from './MailPage'\r\nimport Profile from './ProfilePage'\r\nimport DeleteCourse from './DeleteCoursePage'\r\nimport FindCourse from './FindCoursePage'\r\nimport UserSettings from './UserSettingsPage'\r\n\r\n\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\r\nmodeTitle[AppMode.FEED] = \"Dashboard\";\r\nmodeTitle[AppMode.REGISTER] = \"Register\";\r\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\r\nmodeTitle[AppMode.COURSES] = \"Courses\";\r\nmodeTitle[AppMode.RESET] = \"Reset Password\";\r\nmodeTitle[AppMode.GRADES] = \"Grades\";\r\nmodeTitle[AppMode.USERS] = \"Users\";\r\nmodeTitle[AppMode.ANALYTICS] = \"Analytics\";\r\nmodeTitle[AppMode.ASSIGNMENTS] = \"Assignments\";\r\nmodeTitle[AppMode.COURSE_SETTINGS] = \"Course Settings\";\r\nmodeTitle[AppMode.HELP] = \"Help\";\r\nmodeTitle[AppMode.MAIL] = \"Mail\";\r\nmodeTitle[AppMode.PROFILE] = \"Profile\";\r\nmodeTitle[AppMode.DELETE_COURSE] = \"Delete Course\";\r\nmodeTitle[AppMode.FIND_COURSE] = \"Find Course\";\r\nmodeTitle[AppMode.USER_SETTINGS] = \"User Settings\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.REGISTER] = Register;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\nmodeToPage[AppMode.RESET] = ResetPassword;\r\nmodeToPage[AppMode.GRADES] = Grades;\r\nmodeToPage[AppMode.USERS] = Users;\r\nmodeToPage[AppMode.ANALYTICS] = Analytics;\r\nmodeToPage[AppMode.ASSIGNMENTS] = Assignments;\r\nmodeToPage[AppMode.COURSE_SETTINGS] = CourseSettings;\r\nmodeToPage[AppMode.HELP] = Help;\r\nmodeToPage[AppMode.MAIL] = Mail;\r\nmodeToPage[AppMode.PROFILE] = Profile;\r\nmodeToPage[AppMode.DELETE_COURSE] = DeleteCourse;\r\nmodeToPage[AppMode.FIND_COURSE] = FindCourse;\r\nmodeToPage[AppMode.USER_SETTINGS] = UserSettings;\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  authenticated: false,\r\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\r\n                  editAccount: false,\r\n                  showEditAccountDialog: false,\r\n                  statusMsg: \"\",\r\n                  showAboutDialog: false\r\n                 };\r\n  }\r\n\r\n  //componentDidMount\r\n  componentDidMount() {\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.FEED //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n\r\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \r\n  //the database. The function calls the users/:userid (GET) route to update \r\n  //the userObj state var based on the latest database changes, and sets the \r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to \r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async(newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode\r\n    });\r\n  }\r\n\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id,\r\n                   authenticated: true});\r\n  }\r\n\r\n  showEditAccount = () => {\r\n    this.setState({showEditAccountDialog: true});\r\n\r\n  }\r\n\r\n  cancelEditAccount = () => {\r\n    this.setState({showEditAccountDialog: false});\r\n  }\r\n\r\n  //editAccountDone -- called after successful edit or\r\n  //deletion of user account. msg contains the status\r\n  //message and deleted indicates whether an account was\r\n  //edited (deleted == false) or deleted (deleted == true)\r\n  editAccountDone = (msg, deleted) => {\r\n    if (deleted) {\r\n      this.setState({showEditAccountDialog: false,\r\n                     statusMsg: msg,\r\n                     mode: AppMode.LOGIN});\r\n      } else {\r\n        this.setState({showEditAccountDialog: false,\r\n          statusMsg: msg});\r\n      }\r\n  }\r\n\r\n  closeStatusMsg = () => {\r\n    this.setState({statusMsg: \"\"});\r\n  }\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div className=\"padded-page\">\r\n        {this.state.showAboutDialog ? \r\n          <AboutBox close={() => this.setState({showAboutDialog: false})}/> : null}\r\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\">\r\n              <span>{this.state.statusMsg}</span>\r\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                  <span className=\"fa fa-times\"></span></button></div> : null}\r\n        {/* {this.state.showEditAccountDialog ? \r\n            <CreateEditAccountDialog \r\n              create={false} \r\n              userId={this.state.userObj.id} \r\n              done={this.editAccountDone} \r\n              cancel={this.cancelEditAccount}/> : null} */}\r\n        {this.state.mode == AppMode.LOGIN || this.state.mode == AppMode.REGISTER ? null:<NavBar \r\n          dashboard={modeTitle[this.state.mode]}\r\n          grades={modeTitle[AppMode.GRADES]} \r\n          assignments={modeTitle[AppMode.ASSIGNMENTS]}\r\n          users={modeTitle[AppMode.USERS]}\r\n          analytics={modeTitle[AppMode.ANALYTICS]}\r\n          settings={modeTitle[AppMode.COURSE_SETTINGS]}   \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>}\r\n          <SideMenu \r\n            menuOpen = {this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            displayName={this.state.userObj.displayName}\r\n            profilePicURL={this.state.userObj.profilePicURL}\r\n            localAccount={this.state.userObj.authStrategy === \"local\"}\r\n            editAccount={this.showEditAccount}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            showAbout={() => {this.setState({showAboutDialog: true})}}/>\r\n          {/* <ModeBar \r\n            mode={this.state.mode} \r\n            changeMode={this.handleChangeMode}\r\n            menuOpen={this.state.menuOpen}/> */}\r\n          <ModePage \r\n            menuOpen={this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userObj={this.state.userObj}\r\n            refreshOnUpdate={this.refreshOnUpdate}/>\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}